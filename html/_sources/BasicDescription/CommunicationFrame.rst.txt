Komunikačný rámec ``[_new_]``
=============================

Komunikačný protokol stanovuje predpis komunikácie medzi aplikáciou
("front-end" registračný program bežiaci na strane :term:`PC`) a zariadením
fiškálnej tlačiarne ("back-end").

Zariadenie poskytuje služby pre aplikáciu, ktorá ich požaduje vyslaním správy
obsahujúcej požiadavku na požadovanú službu. Žiadosť je pre zariadenie príkazom,
ktorý vykoná a výsledok tohto vykonania, ako správu obsahujúcu odpoveď,
odošle naspäť do aplikácie. Komunikácia medzi aplikáciou a zariadením sa
odohráva v rámcoch zostavených z požiadavky a odpovede. Zariadenie nikdy
nezačína komunikáciu a vždy iba odpovedá na požiadavky z aplikácie. Zároveň
ale aplikácia nemôže vyslať požiadavku, pokiaľ nedostala odpoveď na predchádzajúcu
požiadavku. Ak odpoveď nepríde do stanovenej doby (time-out), alebo ak sa
transportná vrstva rozpojí, znamená to, že spojenie so zariadením sa prerušilo
a pre ďalšie pokračovanie spolupráce je potrebné ho znovu obnoviť.


.. figure:: ../Images/Communication.png
    :figclass: align-center

    Spracovanie príkazov

Usporiadanie správy pre požiadavku a odpoveď je vzájomne podobné.
Pozostáva z niekoľkých znakových polí vzájomne oddelených znakom
``Horizontal Tab`` (``0x09`` hexadecimálne, ďalej len ``HT``).
Príkaz, resp. celá správa je ukončená znakom ``Line Feed``
(``0x0A`` hexadecimálne, ďalej len ``LF``).

Na kódovanie textov sa používa kódová stránka Windows-1250.
Žiadne pole správy nesmie obsahovať vo svojom textovom reťazci kontrolné znaky
a to nie len spomínané znaky ``HT`` a ``LF``, ale ani iné kontrolné znaky.

Správa s požiadavkou obsahuje pole s identifikátorom príkazu a pole s reťazcom "REQ".
Význam a počet parametrov je rôzny pre jednotlivé príkazy.

Správa s odpoveďou obsahuje identifikátor príkazu nasledovaný reťazcom "RSP",
návratovou hodnotou vykonávania príkazu a množinou výstupných parametrov (ak
má príkaz návratové parametre).

.. code-block:: text

    <commandName><HT><ReqRsp><HT><Par1><HT><Par2><HT>...<HT><ParN><LF>

Pričom platí, že:

* <commandName> v požiadavke aj v odpovedi predstavuje reťazec s identifikátorom príkazu,
* <ReqRsp> je v požiadavke reťazec "REQ" a v odpovedi reťazec "RSP",
* <Par1>, <Par2>, až <ParN> obsahujú reťazce reprezentujúce argumenty príkazu, alebo výstupných hodnôt, v poradí 1,2, až N. Vynechanie parametra, default hodnota je vyjadrená v správe ako prázdny reťazec.

**Príklad**: Požiadavka a odpoveď na zaregistrovanie predaja tovaru:

Abstraktný zápis požiadavky:

.. code-block:: text

    <printRecItem><HT>REQ<HT><description><HT><price><HT><quantity><HT><vatID><HT>
    <specialRegulation><HT><unitPrice*><HT><unitName*><HT><refReceiptID><HT><preLine*><HT><postLine*><LF>

Konkrétne správy ako reťazec v C zápise:

.. code-block:: text
    :linenos:

    pRI\tREQ\tChlieb\t0.76\t1.0\t1\t\t0.76\tks\t\t0123456789\tsklad\n
    pRI\tREQ\tChlieb\t0.76\t1.0\t1\t\t\t\t\t\t\n

Ako je v príklade ukázané, posledných 6 parametrov je prázdnych. Keďže sú v príkaze
**printRecItem** definované ako nepovinné (označené v abstraktnom zápise hviezdičkou)
a nemajú zmysel (nie sú potrebné) pre daný príklad, boli ich hodnoty vynechané.
Je len na aplikácii, či sa rozhodne poslať hodnoty nepovinných parametrov.

Abstraktný zápis odpovede:

.. code-block:: text

    <printRecItem><HT>RSP<HT><exception><LF>

Konkrétne správy ako reťazec v C zápise:

.. code-block:: text
   :linenos:

    pRI\tRSP\t0\n
    pRI\tRSP\t108\n

Pri úspešnom vykonaní požiadavky je hodnota *exception* rovná nule.
Pri neúspešnom vykonaní požiadavky je hodnota *exception* rôzna od 0.

.. toctree::
    :maxdepth: 2
