_`printRecTotalChange`
----------------------

**Formát príkazu**:

  ======== ================================================== =============== ====================
  Pole     Hodnota                                            Dátový typ      Popis
  ======== ================================================== =============== ====================
  Cmd ID   pRTC                                               \-              identifikátor príkazu
  Req/Rsp  REQ                                                \-              požiadavka
  Param1   :ref:`total <pRTC_total>`                          **CURRENCY**    hodnota účtenky vypočítaná aplikáciou
  Param2   :ref:`change <pRTC_change>`                        **CURRENCY**    hodnota výdavku
  Param3   :ref:`description <pRTC_description>`              **VARIANT**     popis výdavku, alebo index typu platby
  Param4   :ref:`preLine <pRTC_preLine>`                      **STRING**      text tlačený pred týmto príkazom
  Param5   :ref:`postLine <pRTC_postLine>`                    **STRING**      text tlačený za týmto príkazom
  ======== ================================================== =============== ====================

  .. _pRTC_total:

**Parameter total**:

  Hodnota účtenky vypočítaná aplikáciou.

  .. _pRTC_change:

**Parameter change**:

  Hodnota výdavku.

    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný. Ak neobsahuje žiadnu hodnotu, je potrebné použiť ``""`` (prázdny reťazec).

  .. _pRTC_description:

**Parameter description**:

  Popis výdavku, alebo index na typ platby.

    * Obsahuje popis výdavku:

        * ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``FALSE``
        * je typu **STRING**
        * maximálna dĺžka reťazca je max(:ref:`FontALineLength <FontALineLength>`, :ref:`FontBLineLength <FontBLineLength>`) znakov

    * Obsahuje index typu platby:

        * ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``TRUE``
        * je typu **INT32**
        * číslo je z intervalu ``1`` až :ref:`NumPayments <NumPayments>`
        * jednotlivé typy platieb a k nim priradené indexy, je možné naprogramovať prostredníctvom príkazu :ref:`setPaymentType <setPaymentType>`

  .. _pRTC_preLine:

**Parameter preLine**:

  Text tlačený pred týmto príkazom.

    * Maximálna dĺžka reťazca je max(:ref:`FontALineLength <FontALineLength>`, :ref:`FontBLineLength <FontBLineLength>`) - ``3`` znakov.
    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný. Ak neobsahuje žiadnu hodnotu, je potrebné použiť ``""`` (prázdny reťazec).

  .. _pRTC_postLine:

**Parameter postLine**:

  Text tlačený za týmto príkazom.

    * Maximálna dĺžka reťazca je max(:ref:`FontALineLength <FontALineLength>`, :ref:`FontBLineLength <FontBLineLength>`) - ``3`` znakov.
    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný. Ak neobsahuje žiadnu hodnotu, je potrebné použiť ``""`` (prázdny reťazec).

**Formát odpovede**:

  ========= =================== ============== ====================
  Pole      Hodnota             Dátový typ     Popis
  ========= =================== ============== ====================
  Cmd ID    pRTC                \-             identifikátor príkazu
  Req/Rsp   RSP                 \-             odpoveď
  Exception *exceptionCode*     **INT32**      návratový kód
  ========= =================== ============== ====================

**Návratové hodnoty**:

  ======================================================= =======================================
  Chyba                                                   Popis
  ======================================================= =======================================
  :ref:`E_ILLEGAL <E_ILLEGAL>`                            Hodnota účtenky :ref:`total <pRTC_total>` vypočítaná aplikáciou sa nezhoduje s hodnotou, ktorú vypočítala FP (účtenka je automaticky zrušená a FP prejde do stavu :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`).
  :ref:`EFP_BAD_DESCRIPTION <EFP_BAD_DESCRIPTION>`        Parameter :ref:`description <pRTC_description>` bol poslaný nesprávne.
  :ref:`EFP_BAD_AMOUNT <EFP_BAD_AMOUNT>`                  Parameter :ref:`change <pRTC_change>` je < (:ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`), alebo :ref:`change <pRTC_change>` > ``0``, alebo parametre :ref:`change <pRTC_change>` a :ref:`total <pRTC_total>` nie sú násobkom ``0.01``.
  :ref:`EFP_WRONG_STATE <EFP_WRONG_STATE>`                Aktuálny stav FP nedovoľuje vykonanie tohto príkazu.
  :ref:`EFP_ILLEGAL_COMMAND <EFP_ILLEGAL_COMMAND>`        FP je v procese realizácie účtenky vkladu/výberu hotovosti, alebo  :ref:`RecGrossTotal <RecGrossTotal>` >= ``0`` a na ukončenie transakcie je potrebné použiť príkaz :ref:`printRecTotal <printRecTotal>`.
  :ref:`EFP_REC_EMPTY <EFP_REC_EMPTY>`                    V tlačiarni chýba papier.
  :ref:`EFP_COVER_OPEN <EFP_COVER_OPEN>`                  Kryt tlačiarne je otvorený.
  :ref:`E_FAILURE <E_FAILURE>`                            Nastala chyba vnútorného zariadenia, ktorá neumožňuje, aby bola transakčná účtenka riadne dokončená. Pre ďalšie zmysluplné pokračovanie v činnosti musí aplikácia zavolať príkaz :ref:`resetPrinter <resetPrinter>` a transakciu môže zopakovať.
  :ref:`EFP_DSP_DISCONNECTED <EFP_DSP_DISCONNECTED>`      Displej je odpojený.
  :ref:`EFP_PRN_DISCONNECTED <EFP_PRN_DISCONNECTED>`      Tlačiareň je odpojená.
  :ref:`EFP_CLOCK_ERROR <EFP_CLOCK_ERROR>`                Na FP bola detegovaná chyba obvodu reálneho času.
  :ref:`EFP_DSP_INTERNAL_ERROR <EFP_DSP_INTERNAL_ERROR>`  Pri práci s displejom vznikla interná chyba.
  :ref:`EFP_PRN_INTERNAL_ERROR <EFP_PRN_INTERNAL_ERROR>`  Pri práci s tlačiarňou vznikla interná chyba.
  ======================================================= =======================================

**Popis príkazu**:

  Skontroluje a vytlačí aktuálnu hodnotu účtenky.

    * V prípade nezhody hodnoty účtenky medzi hodnotou poslanou aplikáciou (parameter :ref:`total <pRTC_total>`) a hodnotou vypočítanou vo FP (hodnota akumulátora :ref:`RecGrossTotal <RecGrossTotal>`) sa registračná transakcia automaticky zruší a stav FP sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>` (stav registračnej transakcie sa zmení zo :ref:`FP_TS_STARTED <FP_TS_STARTED>` na :ref:`FP_TS_ABORTED <FP_TS_ABORTED>`).
    * Ak :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`, potom sa vytlačí popis a hodnota výdavku, stav FP sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`.
    * Ak :ref:`change <pRTC_change>` > :ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>` a súčasne :ref:`change <pRTC_change>` < ``0``, potom sa vytlačí popis a hodnota výdavku a keďže ešte nedošlo k vyrovnaniu celej hodnoty registračnej transakcie, a stav FP bude :ref:`FISCAL_RECEIPT_TOTAL <FISCAL_RECEIPT_TOTAL>`.
    * Ak :ref:`change <pRTC_change>` = ``0`` , alebo :ref:`change <pRTC_change>` = ``""`` (prázdny), FP za tento parameter automaticky doplní hodnotu zbytku nevrátenej hodnoty účtenky (tzn. :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`), čím dôjde k vyrovnaniu hodnoty registračnej transakcie a stav FP sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`.
    * Ak vyrovnanie transakcie začne príkazom :ref:`printRecTotalChange <printRecTotalChange>`, tak príkaz :ref:`printRecTotal <printRecTotal>` nie je viac možné použiť v danej transakcii a transakcia sa musí dokončiť príkazom resp. viacerými príkazmi :ref:`printRecTotalChange <printRecTotalChange>`. Ak už raz začal proces vydávania, tento sa ďalej nesmie kombinovať s operáciami platieb.

**Účinky príkazu**:

  * Ak parameter :ref:`total <pRTC_total>` != :ref:`RecGrossTotal <RecGrossTotal>`:

      * :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_ENDING <FP_PS_FISCAL_RECEIPT_ENDING>`
      * registračná transakcia sa posunie zo stavu :ref:`FP_TS_STARTED <FP_TS_STARTED>` do stavu :ref:`FP_TS_ABORTED <FP_TS_ABORTED>`

  * Ak parameter :ref:`total <pRTC_total>` = :ref:`RecGrossTotal <RecGrossTotal>`:

      * registračná transakcia je v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`
      * ak parameter :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`, potom :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_ENDING <FP_PS_FISCAL_RECEIPT_ENDING>`
      * ak parameter :ref:`change <pRTC_change>` > :ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>` a súčasne :ref:`change <pRTC_change>` < ``0``, potom :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_TOTAL <FP_PS_FISCAL_RECEIPT_TOTAL>`
      * :ref:`AccPaymentTotal <AccPaymentTotal>` = :ref:`AccPaymentTotal <AccPaymentTotal>` + :ref:`change <pRTC_change>`
      * ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``FALSE``

          * :ref:`RecChangeTotal <RecChangeTotal>` = :ref:`RecChangeTotal <RecChangeTotal>` + :ref:`change <pRTC_change>`
          * :ref:`TransChangeCount <TransChangeCount>` = :ref:`TransChangeCount <TransChangeCount>` + 1

      * ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``TRUE``

          * :ref:`RecChangeTotal <RecChangeTotal>`\[:ref:`description <pRTC_description>`\] = :ref:`RecChangeTotal <RecChangeTotal>`\[:ref:`description <pRTC_description>`\] + :ref:`change <pRTC_change>`
          * :ref:`TransChangeCount <TransChangeCount>`\[:ref:`description <pRTC_description>`\] = :ref:`TransChangeCount <TransChangeCount>`\[:ref:`description <pRTC_description>`\] + 1

          .. note::
              * :math:`RecChangeTotal[0] = \displaystyle\sum_{i=1}^{NumPayments} RecChangeTotal[i]`
              * :math:`TransChangeCount[0] = \displaystyle\sum_{i=1}^{NumPayments} TransChangeCount[i]`
  
  * Ak :ref:`AutomaticDrawerOpening <AutomaticDrawerOpening>` = ``TRUE``, potom dôjde k otvoreniu peňažnej zásuvky č. 1.

.. toctree::
    :maxdepth: 2
