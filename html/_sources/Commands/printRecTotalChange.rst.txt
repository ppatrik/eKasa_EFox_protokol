_`printRecTotalChange` ``[_new_]``
----------------------------------

**Formát príkazu**:

  .. value of {tableCmdReqFormat} is defined in config.py
  .. tabularcolumns:: {tableCmdReqFormat}

  .. table::
      :class: longtable

      ======== ================================================== =============== ====================
      Pole     Hodnota                                            Dátový typ      Popis
      ======== ================================================== =============== ====================
      Cmd ID   pRTC                                               \-              identifikátor príkazu
      Req/Rsp  REQ                                                \-              požiadavka
      Param1   :ref:`total <pRTC_total>`                          **CURRENCY**    hodnota účtenky vypočítaná aplikáciou
      Param2   :ref:`change <pRTC_change>`                        **CURRENCY**    hodnota výdavku
      Param3   :ref:`paymentID <pRTC_paymentID>`                  **INT32**       identifikátor typu platby (rozsah <``1``, :ref:`NumPayments <NumPayments>`>)
      Param4   :ref:`preLine <pRTC_preLine>`                      **STRING**      text tlačený pred týmto príkazom
      Param5   :ref:`postLine <pRTC_postLine>`                    **STRING**      text tlačený za týmto príkazom
      ======== ================================================== =============== ====================

.. _pRTC_total:

**Parameter total**:

  Hodnota účtenky vypočítaná aplikáciou.

  .. note::
     Od 1.7.2022 sa zaokrúhľujú platby v hotovosti na 5 eurocentov, hodnota v tomto poli však nebude ovlpyvnená zaokrúhlením
     t.j. posiela sa nezaokrúhlená.

.. _pRTC_change:

**Parameter change**:

  Hodnota výdavku.

    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný. Ak neobsahuje žiadnu
      hodnotu, je potrebné použiť ``""`` (prázdny reťazec).
    * Ak obsahuje hodnotu, potom táto hodnota musí byť uvedená so záporným znamienkom.

  .. note::

    Od 1.7.2022 sa zaokrúhľujú platby v hotovosti na 5 eurocentov. Ak bude posielaný výdavok v hotovosti,
    potom hodnota výdavku poslaná v tomto poli musí byť zaokrúhlená podľa tohto pravidla, inak bude vrátená chyba :ref:`EFP_NOT_PAYABLE_AMOUNT <EFP_NOT_PAYABLE_AMOUNT>`.

.. _pRTC_paymentID:

**Parameter paymentID**:

  Výdavok je daný identifikátorom typu platby.

  * Môže nadobúdať hodnoty v rozsahu <``1``, :ref:`NumPayments <NumPayments>`>.
  * Jednotlivé typy platieb a k nim priradené indexy, je možné naprogramovať
    prostredníctvom príkazu :ref:`setPaymentEntry <setPaymentEntry>`.

.. _pRTC_preLine:

**Parameter preLine**:

  Text tlačený pred týmto príkazom.

    * Maximálna dĺžka reťazca je max(:ref:`FontALineLength <FontALineLength>`,
      :ref:`FontBLineLength <FontBLineLength>`) - ``3`` znakov.
    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný.
    * Ak neobsahuje žiadnu hodnotu, je potrebné použiť ``""`` (prázdny reťazec).

.. _pRTC_postLine:

**Parameter postLine**:

  Text tlačený za týmto príkazom.

    * Maximálna dĺžka reťazca je max(:ref:`FontALineLength <FontALineLength>`,
      :ref:`FontBLineLength <FontBLineLength>`) - ``3`` znakov.
    * Jedná sa o nepovinný parameter, ktorý musí byť zadaný.
    * Ak neobsahuje žiadnu hodnotu, je potrebné použiť ``""`` (prázdny reťazec).

**Formát odpovede**:

  .. value of {tableCmdRespFormat} is defined in config.py
  .. tabularcolumns:: {tableCmdRespFormat}

  .. table::
      :class: longtable

      ========= =================== ============== ====================
      Pole      Hodnota             Dátový typ     Popis
      ========= =================== ============== ====================
      Cmd ID    pRTC                \-             identifikátor príkazu
      Req/Rsp   RSP                 \-             odpoveď
      Exception *exceptionCode*     **INT32**      návratový kód
      ========= =================== ============== ====================

**Návratové hodnoty**:

  .. value of {tableErrorcodeNote} is defined in config.py
  .. tabularcolumns:: {tableErrorcodeNote}

  .. table::
      :class: longtable

      =================================================================== =======================================
      Chyba                                                               Popis
      =================================================================== =======================================
      :ref:`E_ILLEGAL <E_ILLEGAL>`                                        Hodnota účtenky :ref:`total <pRTC_total>` vypočítaná aplikáciou sa nezhoduje s hodnotou, ktorú vypočítala :term:`FP` (účtenka je automaticky zrušená a :term:`FP` prejde do stavu :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`).
      :ref:`EFP_BAD_PAYMENT <EFP_BAD_PAYMENT>`                            Parameter :ref:`paymentID <pRTC_paymentID>` nie je z množiny dovolených hodnôt alebo zvolená platba nie je povolená (:ref:`paymentType <sPE_paymentType>` = :ref:`FP_PEPT_UNUSED <FP_PEPT_UNUSED>`).
      :ref:`EFP_BAD_AMOUNT <EFP_BAD_AMOUNT>`                              Parameter :ref:`change <pRTC_change>` je < (:ref:`RecGrossTotal <RecGrossTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`), alebo :ref:`change <pRTC_change>` > ``0``, alebo parametre :ref:`change <pRTC_change>` a :ref:`total <pRTC_total>` nie sú násobkom ``0.01``.
      :ref:`EFP_WRONG_STATE <EFP_WRONG_STATE>`                            Aktuálny stav :term:`FP` nedovoľuje vykonanie tohto príkazu.
      :ref:`EFP_ILLEGAL_COMMAND <EFP_ILLEGAL_COMMAND>`                    :term:`FP` je v procese realizácie účtenky vkladu/výberu hotovosti, alebo  :ref:`RecGrossTotal <RecGrossTotal>` >= ``0`` a na ukončenie transakcie je potrebné použiť príkaz :ref:`printRecTotal <printRecTotal>`.
      :ref:`EFP_REC_EMPTY <EFP_REC_EMPTY>`                                V tlačiarni chýba papier.
      :ref:`EFP_COVER_OPEN <EFP_COVER_OPEN>`                              Kryt tlačiarne je otvorený.
      :ref:`EFP_DUPLICATE_BUFFER_FULL <EFP_DUPLICATE_BUFFER_FULL>`        Nedostatok miesta pre uloženie kópie dokladu.
      :ref:`EFP_MAX_PAYMENT_CNT_EXCEEDED <EFP_MAX_PAYMENT_CNT_EXCEEDED>`  Bol prekročený maximálny počet platieb alebo výdavkov na doklade. Maximálny počet platieb vrátane výdavkov na jednom doklade je ``256``.
      :ref:`EFP_NOT_PAYABLE_AMOUNT <EFP_NOT_PAYABLE_AMOUNT>`              Nevyplatiteľná suma platby v hotovosti, hodnota platby v hotovosti nie je zaokrúhlená podľa aktuálnych nastavení.
      :ref:`E_FAILURE <E_FAILURE>`                                        Nastala chyba vnútorného zariadenia, ktorá neumožňuje, aby bola transakčná účtenka riadne dokončená. Pre ďalšie zmysluplné pokračovanie v činnosti musí aplikácia zavolať príkaz :ref:`resetPrinter <resetPrinter>` a transakciu môže zopakovať.
      :ref:`EFP_DSP_DISCONNECTED <EFP_DSP_DISCONNECTED>`                  Displej je odpojený.
      :ref:`EFP_PRN_DISCONNECTED <EFP_PRN_DISCONNECTED>`                  Tlačiareň je odpojená.
      :ref:`EFP_CLOCK_ERROR <EFP_CLOCK_ERROR>`                            Na :term:`FP` bola detegovaná chyba obvodu reálneho času.
      :ref:`EFP_DSP_INTERNAL_ERROR <EFP_DSP_INTERNAL_ERROR>`              Pri práci s displejom vznikla interná chyba.
      :ref:`EFP_PRN_INTERNAL_ERROR <EFP_PRN_INTERNAL_ERROR>`              Pri práci s tlačiarňou vznikla interná chyba.
      :ref:`EFP_ICM_COMM_ERROR <EFP_ICM_COMM_ERROR>`                      Nastala chyba komunikácie s :term:`ChDÚ`.
      :ref:`EFP_ICM_BUSY <EFP_ICM_BUSY>`                                  :term:`ChDÚ` je zaneprázdnené, operáciu teraz nie je možné vykonať.
      :ref:`EFP_ICM_OPERATION_ERROR <EFP_ICM_OPERATION_ERROR>`            Pri práci s :term:`ChDÚ` vznikla nešpecifikovaná interná chyba.
      =================================================================== =======================================

**Popis príkazu**:

  Skontroluje a vytlačí aktuálnu hodnotu účtenky.

    * V prípade nezhody hodnoty účtenky medzi hodnotou poslanou aplikáciou (parameter :ref:`total <pRTC_total>`)
      a hodnotou vypočítanou vo :term:`FP` (hodnota akumulátora :ref:`RecGrossTotal <RecGrossTotal>`)
      sa registračná transakcia automaticky zruší a stav :term:`FP` sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`
      (stav registračnej transakcie sa zmení z :ref:`FP_TS_STARTED <FP_TS_STARTED>` na :ref:`FP_TS_ABORTED <FP_TS_ABORTED>`).
    * Ak je výdavok v hotovosti, vypočíta sa zaokrúhlenie platby na základe nastavenia zaokrúhľovania hotovosti, pozri vlastnosti :ref:`CashRoundPlace <CashRoundPlace>` a :ref:`CashRoundType <CashRoundType>`.
      Zaokrúhlenie bude v počítadle :ref:`RecRoundingTotal<RecRoundingTotal>`.
      Ak je výdavok iným platobným prostriedkom ako hotovosťou, zaokrúhlenie bude nulové.
    * Ak :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` + :ref:`RecRoundingTotal<RecRoundingTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`,
      potom sa vytlačí popis a hodnota výdavku, stav :term:`FP` sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`.
      Ak zaokrúhlenie :ref:`RecRoundingTotal<RecRoundingTotal>` má nenulovú hodnotu, vytlačí sa aj jeho hodnota.
    * Ak :ref:`change <pRTC_change>` > :ref:`RecGrossTotal <RecGrossTotal>` + :ref:`RecRoundingTotal<RecRoundingTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>` a
      súčasne :ref:`change <pRTC_change>` < ``0``, potom sa vytlačí popis a hodnota výdavku a
      keďže ešte nedošlo k vyrovnaniu celej hodnoty registračnej transakcie, a stav :term:`FP`
      bude :ref:`FISCAL_RECEIPT_TOTAL <FISCAL_RECEIPT_TOTAL>`.
    * Ak :ref:`change <pRTC_change>` = ``0`` , alebo :ref:`change <pRTC_change>` = ``""`` (prázdny),
      :term:`FP` za tento parameter automaticky doplní hodnotu zbytku nevrátenej hodnoty účtenky
      (tzn. :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` + :ref:`RecRoundingTotal<RecRoundingTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`),
      čím dôjde k vyrovnaniu hodnoty registračnej transakcie a stav :term:`FP`
      sa zmení na :ref:`FISCAL_RECEIPT_ENDING <FISCAL_RECEIPT_ENDING>`.
    * Ak vyrovnanie transakcie začne príkazom :ref:`printRecTotalChange <printRecTotalChange>`,
      tak príkaz :ref:`printRecTotal <printRecTotal>` nie je viac možné použiť
      v danej transakcii a transakcia sa musí dokončiť príkazom resp. viacerými
      príkazmi :ref:`printRecTotalChange <printRecTotalChange>`. Ak už raz začal
      proces vydávania, tento sa ďalej nesmie kombinovať s operáciami platieb.

**Účinky príkazu**:

  * Ak parameter :ref:`total <pRTC_total>` != :ref:`RecGrossTotal <RecGrossTotal>`:

      * :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_ENDING <FP_PS_FISCAL_RECEIPT_ENDING>`
      * registračná transakcia sa posunie zo stavu :ref:`FP_TS_STARTED <FP_TS_STARTED>` do stavu :ref:`FP_TS_ABORTED <FP_TS_ABORTED>`

  * Ak parameter :ref:`total <pRTC_total>` = :ref:`RecGrossTotal <RecGrossTotal>`:

      * registračná transakcia je v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`
      * ak parameter :ref:`change <pRTC_change>` = :ref:`RecGrossTotal <RecGrossTotal>` + :ref:`RecRoundingTotal<RecRoundingTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`,
        potom :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_ENDING <FP_PS_FISCAL_RECEIPT_ENDING>`
      * ak parameter :ref:`change <pRTC_change>` > :ref:`RecGrossTotal <RecGrossTotal>` + :ref:`RecRoundingTotal<RecRoundingTotal>` – :ref:`AccPaymentTotal <AccPaymentTotal>`
        a súčasne :ref:`change <pRTC_change>` < ``0``,
        potom :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_FISCAL_RECEIPT_TOTAL <FP_PS_FISCAL_RECEIPT_TOTAL>`
      * :ref:`AccPaymentTotal <AccPaymentTotal>` = :ref:`AccPaymentTotal <AccPaymentTotal>` + :ref:`change <pRTC_change>`
      * :ref:`RecChangeTotal <RecChangeTotal>`\[:ref:`paymentID <pRTC_paymentID>`\] = :ref:`RecChangeTotal <RecChangeTotal>`\[:ref:`paymentID <pRTC_paymentID>`\] + :ref:`change <pRTC_change>`
      * :ref:`TransChangeCount <TransChangeCount>`\[:ref:`paymentID <pRTC_paymentID>`\] = :ref:`TransChangeCount <TransChangeCount>`\[:ref:`paymentID <pRTC_paymentID>`\] + 1

      .. note::
          * :math:`RecChangeTotal[0] = \displaystyle\sum_{i=1}^{NumPayments} RecChangeTotal[i]`
          * :math:`TransChangeCount[0] = \displaystyle\sum_{i=1}^{NumPayments} TransChangeCount[i]`

  * Ak :ref:`AutomaticDrawerOpening <AutomaticDrawerOpening>` = ``TRUE``, potom dôjde k otvoreniu peňažnej zásuvky č. 1.

.. toctree::
    :maxdepth: 2
