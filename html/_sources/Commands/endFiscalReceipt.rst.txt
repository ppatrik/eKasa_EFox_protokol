_`endFiscalReceipt` ``[_new_]``
-------------------------------

**Formát príkazu**:

  .. value of {tableCmdReqFormat} is defined in config.py
  .. tabularcolumns:: {tableCmdReqFormat}

  .. table::
      :class: longtable

      ======== ==================================================== =============== =======================================
      Pole     Hodnota                                              Dátový typ      Popis
      ======== ==================================================== =============== =======================================
      Cmd ID   eFR                                                  \-              identifikátor príkazu
      Req/Rsp  REQ                                                  \-              požiadavka
      Param1   :ref:`separation <eFR_separation>`                   **BOOLEAN**     určuje oddelenie aktuálneho dokladu
                                                                                    od nasledujúcej dokladu
      ======== ==================================================== =============== =======================================

.. _eFR_separation:

**Parameter separation**:

  * Ak je parameter :ref:`separation <eFR_separation>` = ``TRUE``, potom tlačiareň po dotlačení aktuálneho
    fiškálneho dokladu vysunie papier tak, aby sa dal odtrhnúť a v prípade prítomnosti strihača pásky aj odstrihnúť.
  * Ak je parameter :ref:`separation <eFR_separation>` = ``FALSE``, potom tlačiareň po dotlačení aktuálneho
    fiškálneho dokladu nestrihne ani nevysunie papier a nasledujúci fiškálny, alebo nefiškálny doklad bude nasledovať
    tesne za práve ukončeným dokladom.

**Formát odpovede**:

  .. value of {tableCmdRespFormat} is defined in config.py
  .. tabularcolumns:: {tableCmdRespFormat}

  .. table::
      :class: longtable

      ========= =================== ============== ====================
      Pole      Hodnota             Dátový typ     Popis
      ========= =================== ============== ====================
      Cmd ID    eFR                 \-             identifikátor príkazu
      Req/Rsp   RSP                 \-             odpoveď
      Exception *exceptionCode*     **INT32**      návratový kód
      ========= =================== ============== ====================

**Návratové hodnoty**:

  .. value of {tableErrorcodeNote} is defined in config.py
  .. tabularcolumns:: {tableErrorcodeNote}

  .. table::
      :class: longtable

      =================================================================== =============================================================
      Chyba                                                               Popis
      =================================================================== =============================================================
      :ref:`EFP_WRONG_STATE <EFP_WRONG_STATE>`                            Aktuálny stav :term:`FP` nedovoľuje vykonanie tohto príkazu.
      :ref:`E_FAILURE <E_FAILURE>`                                        Nastala chyba vnútorného zariadenia.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_REC_EMPTY <EFP_REC_EMPTY>`                                V tlačiarni chýba papier.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_REC_EMPTY_WARNING <EFP_REC_EMPTY_WARNING>`                Fiškálny doklad je platný a započítaný do dennej uzávierky, ale vplyvom vonkajšieho zásahu, alebo konca pásky mohlo dôjsť k nedotlačeniu niektorých riadkov za povinnými údajmi.
      :ref:`EFP_COVER_OPEN <EFP_COVER_OPEN>`                              Kryt tlačiarne je otvorený.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_COVER_OPEN_WARNING <EFP_COVER_OPEN_WARNING>`              Fiškálny doklad je platný a započítaný do dennej uzávierky,
                                                                          ale vplyvom otvorenia krytu tlačiarne mohlo dôjsť
                                                                          k nedotlačeniu niektorých riadkov za povinnými údajmi.
      :ref:`EFP_CUTTER <EFP_CUTTER>`                                      Strihač papiera je v zlom stave.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_CUTTER_WARNING <EFP_CUTTER_WARNING>`                      Strihač papiera je v zlom stave, ale doklad bol kompletne
                                                                          vytlačený.
      :ref:`EFP_DSP_DISCONNECTED <EFP_DSP_DISCONNECTED>`                  Displej je odpojený.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_PRN_DISCONNECTED <EFP_PRN_DISCONNECTED>`                  Tlačiareň je odpojená.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_CLOCK_ERROR <EFP_CLOCK_ERROR>`                            :term:`FP` detegoval chybu obvodu reálneho času.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_DSP_INTERNAL_ERROR <EFP_DSP_INTERNAL_ERROR>`              Pri práci s displejom vznikla interná chyba.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_PRN_INTERNAL_ERROR <EFP_PRN_INTERNAL_ERROR>`              Pri práci s tlačiarňou vznikla interná chyba.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_ICM_COMM_ERROR <EFP_ICM_COMM_ERROR>`                      Nastala chyba komunikácie s :term:`ChDÚ`.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_ICM_BUSY <EFP_ICM_BUSY>`                                  :term:`ChDÚ` je zaneprázdnené, operáciu teraz nie je možné vykonať.
                                                                          Pozri :ref:`Overenie stavu registrácie <eFR_OverenieStavuReg>`!
      :ref:`EFP_ICM_OPERATION_ERROR <EFP_ICM_OPERATION_ERROR>`            Pri práci s :term:`ChDÚ` vznikla nešpecifikovaná interná chyba.
      :ref:`EFP_TAX_AUTH_REGIST_REJECTED <EFP_TAX_AUTH_REGIST_REJECTED>`  Požiadavka na registráciu dokladu alebo polohy bola zamietnutá
                                                                          serverom daňovej správy. Doklad nebol započítaný do počítadiel
                                                                          :term:`FP`.
      =================================================================== =============================================================

.. _eFR_OverenieStavuReg:

  .. note::
      **Overenie stavu registrácie do systému eKasa**

      Pre návratové hodnoty pri ktorých je v popise uvedený text "Pozri Overenie stavu registrácie!" je potrebné vykonať príkaz :ref:`getLastRegisteredReceiptInfo <getLastRegisteredReceiptInfo>`, ktorého parameter :ref:`taxAuthRegistStatus <gLRRI_taxAuthRegistStatus>` udáva stav registrácie a platí, že:

        * ak parameter :ref:`taxAuthRegistStatus <gLRRI_taxAuthRegistStatus>` nadobúda iné hodnoty ako:

            * :ref:`FP_TARS_REG_NOT_STARTED <gLRRI_taxAuthRegistStatus>`
            * :ref:`FP_TARS_INTERNAL_ERROR <gLRRI_taxAuthRegistStatus>`

          potom bude potrebné pre dokončenie procesu znovu zavolať príkaz :ref:`endFiscalReceipt <endFiscalReceipt>`

        * ak parameter :ref:`taxAuthRegistStatus <gLRRI_taxAuthRegistStatus>` nadobúda jednu z hodnôt:

            * :ref:`FP_TARS_REG_NOT_STARTED <gLRRI_taxAuthRegistStatus>`
            * :ref:`FP_TARS_INTERNAL_ERROR <gLRRI_taxAuthRegistStatus>`

          potom bude potrebné vykonať príkaz :ref:`resetPrinter <resetPrinter>`

      Iný spôsob ako zistiť nutnosť opakovať príkaz :ref:`endFiscalReceipt <endFiscalReceipt>` je nasledovný:

        * ak príkaz :ref:`endFiscalReceipt <endFiscalReceipt>` skončí chybou
        * je potrebné vykonať príkaz :ref:`resetPrinter <resetPrinter>`
        * ak príkaz :ref:`resetPrinter <resetPrinter>` vráti chybu :ref:`EFP_TAX_AUTH_REG_IN_PROGRESS <EFP_TAX_AUTH_REG_IN_PROGRESS>`, je nutné opakovať príkaz :ref:`endFiscalReceipt <endFiscalReceipt>`.

**Popis príkazu**:

  Príkaz ukončí aktuálny doklad, vykoná jeho registráciu do systému :term:`eKasa`, vytlačí pätičku obsahujúcu
  registračné údaje (ako sú :term:`OKP`, :term:`PKP`, :term:`UID`). Taktiež sa vykonajú aj ďalšie operácie súvisiace
  s uzavretím dokladu.

  Korektné vykonanie tohto príkazu spôsobí zmenu property :ref:`PrinterState <PrinterState>` na hodnotu
  :ref:`FP_PS_MONITOR <FP_PS_MONITOR>`.

  .. note::
      * Tento príkaz je neprerušiteľný, čo znamená, že ak sa tento príkaz začne vykonávať, potom už musí byť dokončený.
      * Pre ukončenie tohto príkazu je pre niektoré typy chýb potrebné postupovať podľa :ref:`postupu pre overenie stavu registrácie do systému eKasa <eFR_OverenieStavuReg>`.

**Účinky príkazu**:

    * *Rec…Total…* = ``0``
    * *Rec…Count…* = ``0``
    * :ref:`CurrentTotal <CurrentTotal>` = ``0``
    * :ref:`AccPaymentTotal <AccPaymentTotal>` = ``0``

    * Ak je registračná transakcia v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`:

        * :term:`RT` sa posunie do stavu :ref:`FP_TS_DONE <FP_TS_DONE>`

    * :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_MONITOR <FP_PS_MONITOR>`

    V ďalšej časti sú popísané účinky pre rôzne typy dokladov.

    *Pre doklady predaja a vrátenia v registračnom režime*:

        Teda ak :ref:`TrainingModeActive <TrainingModeActive>` = ``FALSE`` a zároveň
        :ref:`FiscalReceiptType <FiscalReceiptType>` nadobúda jednu z hodnôt
        :ref:`FP_RT_SALES <FP_RT_SALES>` (doklad predaja), :ref:`FP_RT_REFUND <FP_RT_REFUND>`
        (doklad vrátenia tovaru).

            * :ref:`DailyTotal <DailyTotal>` = :ref:`DailyTotal <DailyTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * :ref:`FiscalRecCount <FiscalRecCount>` = :ref:`FiscalRecCount <FiscalRecCount>` + ``1``
            * :ref:`GrandTotal <GrandTotal>` = :ref:`GrandTotal <GrandTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * *Day…Count…* = *Day…Count…* + *Rec…Count…*
            * Ak :ref:`VatIncluded <VatIncluded>` = ``TRUE``, potom pre všetky hodnoty *Day…Total…* platí:

                * *Day…Total…* = *Day…Total…* + *Rec…Total…*

            * Ak :ref:`VatIncluded <VatIncluded>` = ``FALSE``

                * *DayGrossTotal…* = *DayGrossTotal…* + *RecGrossTotal…*
                * *DayNetTotal…* = *DayNetTotal…* + *RecNetTotal…*
                * *DayVatTotal… = DayVatTotal… + RecVatTotal…*
                * *DayPaymentTotal…* = *DayPaymentTotal…* + *RecPaymentTotal…*
                * *DayChangeTotal…* = *DayChangeTotal…* + *RecChangeTotal…*
                * *DayRoundingTotal…* = *DayRoundingTotal…* + *RecRoundingTotal…*
                * Pre ostatné hodnoty *Day…Total…* platí:
                * *Day…Total*\[i\] = *Day…Total*\[i\] + *Rec…Total*\[i\] + :ref:`VAT_NET <VAT_NET>`\(*Rec…Total*\[i\], i\);
                  pre i = 1 až :ref:`NumVatRates <NumVatRates>`
                * :math:`Day…Total[0] = \displaystyle\sum_{i=1}^{NumVatRates} Day…Total[i]`

            * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`DailyVoidTotal <DailyVoidTotal>`  = :ref:`DailyVoidTotal <DailyVoidTotal>` + \| :ref:`RecGrossTotal <RecGrossTotal>` \|
                * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady predaja a vrátenia v tréningovom režime*:

        Teda ak :ref:`TrainingModeActive <TrainingModeActive>` = ``TRUE`` a zároveň
        :ref:`FiscalReceiptType <FiscalReceiptType>` nadobúda jednu z hodnôt
        :ref:`FP_RT_SALES <FP_RT_SALES>` (doklad predaja), :ref:`FP_RT_REFUND <FP_RT_REFUND>`
        (doklad vrátenia tovaru).

        * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`TrainingTotal <TrainingTotal>` = :ref:`TrainingTotal <TrainingTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * :ref:`TrainingCount <TrainingCount>` = :ref:`TrainingCount <TrainingCount>` + ``1``

        * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`TrainingVoidTotal <TrainingVoidTotal>` = :ref:`TrainingVoidTotal <TrainingVoidTotal>` + \| :ref:`RecGrossTotal <RecGrossTotal>` \|
            * :ref:`TrainingVoidCount <TrainingVoidCount>` = :ref:`TrainingVoidCount <TrainingVoidCount>` + ``1``

    *Pre doklady vkladu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_CASH_IN <FP_RT_CASH_IN>`

        * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`CashInTotal <CashInTotal>`\[i\] = :ref:`CashInTotal <CashInTotal>`\[i\] + :ref:`RecCashInTotal <RecCashInTotal>`
            * :ref:`CashInCount <CashInCount>`\[i\] = :ref:`CashInCount <CashInCount>`\[i\] + ``1``

            kde "i" je dané parametrom :ref:`paymentID <pRC_paymentID>`
            z predchádzajúceho príkazu :ref:`printRecCash <printRecCash>`.

        * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady výberu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_CASH_OUT <FP_RT_CASH_OUT>`

        * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`CashOutTotal <CashOutTotal>`\[i\] = :ref:`CashOutTotal <CashOutTotal>`\[i\] + :ref:`RecCashOutTotal <RecCashOutTotal>`
            * :ref:`CashOutCount <CashOutCount>`\[i\] = :ref:`CashOutCount <CashOutCount>`\[i\] + ``1``

            kde "i" je dané parametrom :ref:`paymentID <pRC_paymentID>`
            z predchádzajúceho príkazu :ref:`printRecCash <printRecCash>`.

        * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady úhrady faktúry a vyplatenia dobropisu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_SIMPLE_INVOICE <FP_RT_SIMPLE_INVOICE>`

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``FALSE``

            * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`DailyTotal <DailyTotal>` = :ref:`DailyTotal <DailyTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * :ref:`FiscalRecCount <FiscalRecCount>` = :ref:`FiscalRecCount <FiscalRecCount>` + ``1``
                * :ref:`GrandTotal <GrandTotal>` = :ref:`GrandTotal <GrandTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * SimpInvoiceCount = SimpInvoiceCount + ``1``
                * *Day…Total…* = *Day…Total…* + *Rec…Total…*
                * *Day…Count…* = *Day…Count…* + *Rec…Count…*

            * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`DailyVoidTotal <DailyVoidTotal>`  = :ref:`DailyVoidTotal <DailyVoidTotal>` + \| :ref:`RecGrossTotal <RecGrossTotal>` \|
                * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``TRUE``

            * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`TrainingTotal <TrainingTotal>` = :ref:`TrainingTotal <TrainingTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * :ref:`TrainingCount <TrainingCount>` = :ref:`TrainingCount <TrainingCount>` + ``1``

            * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`TrainingVoidTotal <TrainingVoidTotal>` = :ref:`TrainingVoidTotal <TrainingVoidTotal>` + \| :ref:`RecGrossTotal <RecGrossTotal>` \|
                * :ref:`TrainingVoidCount <TrainingVoidCount>` = :ref:`TrainingVoidCount <TrainingVoidCount>` + ``1``

    *Pre doklady výmeny jednoúčelového poukazu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_SINGLE_PURPOSE_VOUCHER <FP_RT_SINGLE_PURPOSE_VOUCHER>`

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``FALSE``

            * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`FiscalRecCount <FiscalRecCount>` = :ref:`FiscalRecCount <FiscalRecCount>` + ``1``
                * *Day…Total…* = *Day…Total…* + *Rec…Total…*
                * *Day…Count…* = *Day…Count…* + *Rec…Count…*

            * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``TRUE``

            * Ak je :term:`RT` v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`TrainingCount <TrainingCount>` = :ref:`TrainingCount <TrainingCount>` + ``1``

            * Ak je :term:`RT` v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`TrainingVoidCount <TrainingVoidCount>` = :ref:`TrainingVoidCount <TrainingVoidCount>` + ``1``

.. toctree::
    :maxdepth: 2
