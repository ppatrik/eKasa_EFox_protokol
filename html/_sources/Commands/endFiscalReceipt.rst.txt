_`endFiscalReceipt`
-------------------

**Formát príkazu**:

  ======== ==================================================== =============== ====================
  Pole     Hodnota                                              Dátový typ      Popis
  ======== ==================================================== =============== ====================
  Cmd ID   eFR                                                  \-              identifikátor príkazu
  Req/Rsp  REQ                                                  \-              požiadavka
  Param1   :ref:`separation <eFR_separation>`                   **BOOLEAN**     určuje oddelenie aktuálneho dokladu od nasledujúcej dokladu
  ======== ==================================================== =============== ====================

  .. _eFR_separation:

**Parameter separation**:

  * Ak je parameter :ref:`separation <eFR_separation>` = ``TRUE``, potom tlačiareň po dotlačení aktuálneho fiškálneho dokladu vysunie papier tak, aby sa dal odtrhnúť a v prípade prítomnosti strihača pásky aj odstrihnúť.
  * Ak je parameter :ref:`separation <eFR_separation>` = ``FALSE``, potom tlačiareň po dotlačení aktuálneho fiškálneho dokladu nestrihne ani nevysunie papier a nasledujúci fiškálny, alebo nefiškálny doklad bude nasledovať tesne za práve ukončeným dokladom.

**Formát odpovede**:

  ========= =================== ============== ====================
  Pole      Hodnota             Dátový typ     Popis
  ========= =================== ============== ====================
  Cmd ID    eFR                 \-             identifikátor príkazu
  Req/Rsp   RSP                 \-             odpoveď
  Exception *exceptionCode*     **INT32**      návratový kód
  ========= =================== ============== ====================

**Návratové hodnoty**:

  ====================================================== =======================================
  Chyba                                                  Popis
  ====================================================== =======================================
  :ref:`EFP_WRONG_STATE <EFP_WRONG_STATE>`               Aktuálny stav FP nedovoľuje vykonanie tohto príkazu.
  :ref:`E_FAILURE <E_FAILURE>`                           Nastala chyba vnútorného zariadenia, ktorá neumožňuje, aby bol doklad transakcie riadne dokončený. Pre ďalšie pokračovanie v činnosti musí aplikácia zavolať príkaz :ref:`resetPrinter <resetPrinter>` a transakciu môže zopakovať.
  :ref:`EFP_REC_EMPTY <EFP_REC_EMPTY>`                   V tlačiarni chýba papier.
  :ref:`EFP_REC_EMPTY_WARNING <EFP_REC_EMPTY_WARNING>`   Fiškálny doklad je platný a započítaný do dennej uzávierky, ale vplyvom vonkajšieho zásahu, alebo konca pásky mohlo dôjsť k nedotlačeniu niektorých riadkov povinnými údajmi.
  :ref:`EFP_COVER_OPEN <EFP_COVER_OPEN>`                 Kryt tlačiarne je otvorený.
  :ref:`EFP_COVER_OPEN_WARNING <EFP_COVER_OPEN_WARNING>` Fiškálny doklad je platný a započítaný do dennej uzávierky, ale vplyvom otvorenia krytu tlačiarne mohlo dôjsť k nedotlačeniu niektorých riadkov za povinnými údajmi.
  :ref:`EFP_CUTTER <EFP_CUTTER>`                         Strihač papiera je v zlom stave.
  :ref:`EFP_CUTTER_WARNING <EFP_CUTTER_WARNING>`         Strihač papiera je v zlom stave, ale dokladu bol kompletne vytlačený.
  :ref:`EFP_DSP_DISCONNECTED <EFP_DSP_DISCONNECTED>`     Displej je odpojený.
  :ref:`EFP_PRN_DISCONNECTED <EFP_PRN_DISCONNECTED>`     Tlačiareň je odpojená.
  :ref:`EFP_CLOCK_ERROR <EFP_CLOCK_ERROR>`               FP detegoval chybu obvodu reálneho času.
  :ref:`EFP_PRN_INTERNAL_ERROR <EFP_PRN_INTERNAL_ERROR>` Pri práci s tlačiarňou vznikla interná chyba.
  ====================================================== =======================================

**Popis príkazu**:

  Príkaz ukončí aktuálny fiškálny doklad, vytlačí pätičku a vykonajú sa všetky operácie súvisiace s uzavretím dokladu.

  Korektné vykonanie tohto príkazu spôsobí zmenu property :ref:`PrinterState <PrinterState>` na hodnotu :ref:`FP_PS_MONITOR <FP_PS_MONITOR>`.

**Účinky príkazu**:

    * *Rec…Total…* = ``0``
    * *Rec…Count…* = ``0``
    * :ref:`CurrentTotal <CurrentTotal>` = ``0``
    * :ref:`AccPaymentTotal <AccPaymentTotal>` = ``0``

    * Ak je registračná transakcia v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`:

        * dôjde k aktualizácii premennej :ref:`DTSettingLimit <DTSettingLimit>`
        * RT sa posunie do stavu :ref:`FP_TS_DONE <FP_TS_DONE>`

    * :ref:`PrinterState <PrinterState>` = :ref:`FP_PS_MONITOR <FP_PS_MONITOR>`

    V ďalšej časti sú popísané účinky pre rôzne typy dokladov.

    *Pre doklady predaja a vrátenia v registračnom režime*:

        Teda ak :ref:`TrainingModeActive <TrainingModeActive>` = ``FALSE`` a zároveň
        :ref:`FiscalReceiptType <FiscalReceiptType>` nadobúda jednu z hodnôt
        :ref:`FP_RT_SALES <FP_RT_SALES>` (doklad predaja), :ref:`FP_RT_REFUND <FP_RT_REFUND>`
        (doklad vrátenia tovaru), alebo :ref:`FP_RT_CORRECTION <FP_RT_CORRECTION>` (doklad opravy).

            * :ref:`DailyTotal <DailyTotal>` = :ref:`DailyTotal <DailyTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * :ref:`FiscalRecCount <FiscalRecCount>` = :ref:`FiscalRecCount <FiscalRecCount>` + ``1``
            * :ref:`GrandTotal <GrandTotal>` = :ref:`GrandTotal <GrandTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * *Day…Count…* = *Day…Count…* + *Rec…Count…*
            * Ak :ref:`VatIncluded <VatIncluded>` = ``TRUE``, potom pre všetky hodnoty *Day…Total…* platí:

                * *Day…Total…* = *Day…Total…* + *Rec…Total…*

            * Ak :ref:`VatIncluded <VatIncluded>` = ``FALSE``

                * *DayGrossTotal…* = *DayGrossTotal…* + *RecGrossTotal…*
                * *DayNetTotal…* = *DayNetTotal…* + *RecNetTotal…*
                * *DayVatTotal… = DayVatTotal… + RecVatTotal…*
                * *DayPaymentTotal…* = *DayPaymentTotal…* + *RecPaymentTotal…*
                * *DayChangeTotal…* = *DayChangeTotal…* + *RecChangeTotal…*
                * Pre ostatné hodnoty *Day…Total…* platí:
                * *Day…Total*\[i\] = *Day…Total*\[i\] + *Rec…Total*\[i\] + :ref:`VAT_NET <VAT_NET>`\(*Rec…Total*\[i\], i\); pre i = 1 až :ref:`NumVatRates <NumVatRates>`
                * :math:`Day…Total[0] = \displaystyle\sum_{i=1}^{NumVatRates} Day…Total[i]`

            * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`DailyVoidTotal <DailyVoidTotal>`  = :ref:`DailyVoidTotal <DailyVoidTotal>` + \|:ref:`RecGrossTotal <RecGrossTotal>`\|
                * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady predaja a vrátenia v tréningovom režime*:

        Teda ak :ref:`TrainingModeActive <TrainingModeActive>` = ``TRUE`` a zároveň
        :ref:`FiscalReceiptType <FiscalReceiptType>` nadobúda jednu z hodnôt
        :ref:`FP_RT_SALES <FP_RT_SALES>` (doklad predaja), :ref:`FP_RT_REFUND <FP_RT_REFUND>`
        (doklad vrátenia tovaru), alebo :ref:`FP_RT_CORRECTION <FP_RT_CORRECTION>` (doklad opravy).

        * Ak je RT v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`TrainingTotal <TrainingTotal>` = :ref:`TrainingTotal <TrainingTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
            * :ref:`TrainingCount <TrainingCount>` = :ref:`TrainingCount <TrainingCount>` + ``1``

        * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`TrainingVoidTotal <TrainingVoidTotal>` = :ref:`TrainingVoidTotal <TrainingVoidTotal>` + \|:ref:`RecGrossTotal <RecGrossTotal>`\|
            * :ref:`TrainingVoidCount <TrainingVoidCount>` = :ref:`TrainingVoidCount <TrainingVoidCount>` + ``1``

    *Pre doklady vkladu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_CASH_IN <FP_RT_CASH_IN>`

        * Ak je RT v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`CashInTotal <CashInTotal>` = :ref:`CashInTotal <CashInTotal>` + :ref:`RecCashInTotal <RecCashInTotal>`
            * :ref:`CashInCount <CashInCount>` = :ref:`CashInCount <CashInCount>` + ``1``
            * Ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``TRUE``

                * :ref:`CashInTotal <CashInTotal>`\[i\] = :ref:`CashInTotal <CashInTotal>`\[i\] + :ref:`RecCashInTotal <RecCashInTotal>`
                * :ref:`CashInCount <CashInCount>`\[i\] = :ref:`CashInCount <CashInCount>`\[i\] + ``1``

                kde "i" je dané parametrom :ref:`paymentID <pRC_paymentID>` z predchádzajúceho príkazu :ref:`printRecCash <printRecCash>`

        * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady vkladu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_CASH_OUT <FP_RT_CASH_OUT>`

        * Ak je RT v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

            * :ref:`CashOutTotal <CashOutTotal>` = :ref:`CashOutTotal <CashOutTotal>` + :ref:`RecCashOutTotal <RecCashOutTotal>`
            * :ref:`CashOutCount <CashOutCount>` = :ref:`CashOutCount <CashOutCount>` + ``1``
            * Ak :ref:`PaymentsRegistration <PaymentsRegistration>` = ``TRUE``

                * :ref:`CashOutTotal <CashOutTotal>`\[i\] = :ref:`CashOutTotal <CashOutTotal>`\[i\] + :ref:`RecCashOutTotal <RecCashOutTotal>`
                * :ref:`CashOutCount <CashOutCount>`\[i\] = :ref:`CashOutCount <CashOutCount>`\[i\] + ``1``

                Kde "i" je dané parametrom :ref:`paymentID <pRC_paymentID>` z predchádzajúceho príkazu :ref:`printRecCash <printRecCash>`

        * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

            * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

    *Pre doklady úhrady faktúry a vyplatenia dobropisu*:

        Teda ak: :ref:`FiscalReceiptType <FiscalReceiptType>` = :ref:`FP_RT_SIMPLE_INVOICE <FP_RT_SIMPLE_INVOICE>`

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``FALSE``

            * Ak je RT v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`DailyTotal <DailyTotal>` = :ref:`DailyTotal <DailyTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * :ref:`FiscalRecCount <FiscalRecCount>` = :ref:`FiscalRecCount <FiscalRecCount>` + ``1``
                * :ref:`GrandTotal <GrandTotal>` = :ref:`GrandTotal <GrandTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * SimpInvoiceCount = SimpInvoiceCount + ``1``
                * *Day…Total…* = *Day…Total…* + *Rec…Total…*
                * *Day…Count…* = *Day…Count…* + *Rec…Count…*

            * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`DailyVoidTotal <DailyVoidTotal>`  = :ref:`DailyVoidTotal <DailyVoidTotal>` + \|:ref:`RecGrossTotal <RecGrossTotal>`\|
                * :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` = :ref:`FiscalRecVoidCount <FiscalRecVoidCount>` + ``1``

        * Ak :ref:`TrainingModeActive <TrainingModeActive>` = ``TRUE``

            * Ak je RT v stave :ref:`FP_TS_STARTED <FP_TS_STARTED>`

                * :ref:`TrainingTotal <TrainingTotal>` = :ref:`TrainingTotal <TrainingTotal>` + :ref:`RecGrossTotal <RecGrossTotal>`
                * :ref:`TrainingCount <TrainingCount>` = :ref:`TrainingCount <TrainingCount>` + ``1``

            * Ak je RT v stave :ref:`FP_TS_VOIDED <FP_TS_VOIDED>`

                * :ref:`TrainingVoidTotal <TrainingVoidTotal>` = :ref:`TrainingVoidTotal <TrainingVoidTotal>` + \|:ref:`RecGrossTotal <RecGrossTotal>`\|
                * :ref:`TrainingVoidCount <TrainingVoidCount>` = :ref:`TrainingVoidCount <TrainingVoidCount>` + ``1``

.. toctree::
    :maxdepth: 2
